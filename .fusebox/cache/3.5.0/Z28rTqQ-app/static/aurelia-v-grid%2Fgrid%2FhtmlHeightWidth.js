module.exports = { contents: "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nclass HtmlHeightWidth {\r\n    constructor(controller) {\r\n        this.controller = controller;\r\n        this.avgScrollBarWidth = this.getScrollbarWidth() || 17;\r\n        this.avgPanel_Height = 0;\r\n        this.avgHeader_Height = 30;\r\n        this.avgHeader_Top = 0;\r\n        this.avgContent_Top = 30;\r\n        this.avgContent_Bottom = 30;\r\n        this.avgHeaderLeft_Width = 200;\r\n        this.avgHeaderMain_Left = 200;\r\n        this.avgHeaderMain_Right = 150;\r\n        this.avgHeaderMainScroll_Width = 0;\r\n        this.avgHeaderMainScroll_Height = 100;\r\n        this.avgHeaderRight_Right = 0;\r\n        this.avgHeaderRight_Width = 150;\r\n        this.avgContentLeft_Width = 200 + this.avgScrollBarWidth;\r\n        this.avgContentLeftScroll_Width = '100%';\r\n        this.avgContentLeftScroll_Height = 0 + this.avgScrollBarWidth;\r\n        this.avgContentMain_Left = 200;\r\n        this.avgContentMain_Right = 150 - this.avgScrollBarWidth;\r\n        this.avgContentMainScroll_Width = 0;\r\n        this.avgContentMainScroll_Height = 0;\r\n        this.avgContentRight_Right = 0;\r\n        this.avgContentRight_Width = 150;\r\n        this.avgContentRightScroll_Width = '100%';\r\n        this.avgContentRightScroll_Height = 0 + this.avgScrollBarWidth;\r\n        this.avgContentGroup_Width = 150;\r\n        this.avgContentGroup_Height = 0;\r\n        this.avgContentGroup_Top = 0;\r\n        this.avgContentGroup_Bottom = 0;\r\n        this.avgContentVhandle_Width = 0 + this.avgScrollBarWidth;\r\n        this.avgContentVhandle_Height = 0;\r\n        this.avgContentVhandle_Top = 0;\r\n        this.avgContentVhandleScroll_Height = 0;\r\n        this.avgContentVhandle_Bottom = 0;\r\n        this.avgContentHhandle_Bottom = 0;\r\n        this.avgContentHhandle_Right = 0 + this.avgScrollBarWidth;\r\n        this.avgContentHhandle_Left = 0;\r\n        this.avgContentHhandle_Height = 17;\r\n        this.avgContentHhandleScroll_Width = 17;\r\n        this.avgFooter_Height = 30;\r\n    }\r\n    getNewHeight(length) {\r\n        let lengthTotal = 0;\r\n        if (this.controller.attVariableRowHeight) {\r\n            lengthTotal = this.controller.getRowHeightState().total;\r\n        }\r\n        else {\r\n            lengthTotal = this.controller.attRowHeight * length;\r\n        }\r\n        return lengthTotal;\r\n    }\r\n    setCollectionLength(length, includeScroller) {\r\n        let rowTotal = this.getNewHeight(length);\r\n        let avgScrollbarHeightValue = includeScroller === false ? 0 : this.avgScrollBarWidth;\r\n        let total = rowTotal + avgScrollbarHeightValue;\r\n        this.avgContentRightScroll_Height = total;\r\n        this.avgContentGroup_Height = total;\r\n        this.avgContentVhandleScroll_Height = total;\r\n        this.avgContentMainScroll_Height = total;\r\n        this.avgContentLeftScroll_Height = total;\r\n    }\r\n    addDefaultsAttributes(attHeaderHeight, attRowHeight, attFooterHeight, attPanelHeight) {\r\n        this.attHeaderHeight = attHeaderHeight;\r\n        this.attRowHeight = attRowHeight;\r\n        this.attFooterHeight = attFooterHeight;\r\n        this.attPanelHeight = attPanelHeight;\r\n        this.avgPanel_Height = attPanelHeight;\r\n        this.avgHeader_Top = attPanelHeight;\r\n        this.avgHeader_Height = attHeaderHeight;\r\n        this.avgContent_Top = attHeaderHeight + attPanelHeight;\r\n        this.avgContent_Bottom = attFooterHeight;\r\n        this.avgFooter_Height = attFooterHeight;\r\n        this.avgHeaderMainScroll_Height = attHeaderHeight;\r\n        this.avgContentGroup_Height = this.avgContentGroup_Height;\r\n        this.avgContentGroup_Top = this.avgContent_Top;\r\n        this.avgContentGroup_Bottom = this.avgContent_Bottom;\r\n        this.avgContentVhandle_Height = this.avgContentVhandle_Height;\r\n        this.avgContentVhandle_Top = this.avgContent_Top;\r\n        this.avgContentVhandle_Bottom = this.avgContent_Bottom;\r\n        this.avgContentHhandle_Bottom = attFooterHeight;\r\n        this.avgContentHhandle_Height = this.avgScrollBarWidth;\r\n    }\r\n    adjustWidthsColumns(columnBindingContext, groupsLength) {\r\n        let left = groupsLength ? groupsLength * 15 : 0;\r\n        let main = 0;\r\n        let right = 0;\r\n        for (let i = 0; i < columnBindingContext.setupmain.length; i++) {\r\n            if (columnBindingContext.setupleft[i].show) {\r\n                left = left + columnBindingContext.setupleft[i].width;\r\n            }\r\n            if (columnBindingContext.setupmain[i].show) {\r\n                main = main + columnBindingContext.setupmain[i].width;\r\n            }\r\n            if (columnBindingContext.setupright[i].show) {\r\n                right = right + columnBindingContext.setupright[i].width;\r\n            }\r\n        }\r\n        this.avgContentLeft_Width = left;\r\n        this.avgHeaderLeft_Width = left;\r\n        this.avgContentMain_Left = left;\r\n        this.avgContentMain_Right = right;\r\n        this.avgHeaderMain_Left = left;\r\n        this.avgHeaderMain_Right = right;\r\n        this.avgHeaderMainScroll_Width = main;\r\n        this.avgContentMainScroll_Width = main;\r\n        this.avgContentRight_Width = right;\r\n        this.avgHeaderRight_Width = right;\r\n        this.avgContentHhandle_Right = right;\r\n        this.avgContentHhandle_Left = left;\r\n        this.avgContentHhandleScroll_Width = main;\r\n    }\r\n    setWidthFromColumnConfig(colConfig, groupsLength) {\r\n        let left = groupsLength ? groupsLength * 15 : 0;\r\n        let main = 0;\r\n        let right = 0;\r\n        for (let i = 0; i < colConfig.length; i++) {\r\n            switch (true) {\r\n                case colConfig[i].colPinLeft && colConfig[i].colPinRight:\r\n                    left = left + colConfig[i].colWidth;\r\n                    right = right + colConfig[i].colWidth;\r\n                    break;\r\n                case colConfig[i].colPinLeft:\r\n                    left = left + colConfig[i].colWidth;\r\n                    break;\r\n                case colConfig[i].colPinRight:\r\n                    right = right + colConfig[i].colWidth;\r\n                    break;\r\n                case !colConfig[i].colPinLeft && !colConfig[i].colPinRight:\r\n                    main = main + colConfig[i].colWidth;\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        this.avgContentLeft_Width = left;\r\n        this.avgHeaderLeft_Width = left;\r\n        this.avgContentMain_Left = left;\r\n        this.avgContentMain_Right = right;\r\n        this.avgHeaderMain_Left = left;\r\n        this.avgHeaderMain_Right = right;\r\n        this.avgHeaderMainScroll_Width = main;\r\n        this.avgContentMainScroll_Width = main;\r\n        this.avgContentRight_Width = right;\r\n        this.avgHeaderRight_Width = right;\r\n        this.avgContentHhandle_Right = right;\r\n        this.avgContentHhandle_Left = left;\r\n        this.avgContentHhandleScroll_Width = main;\r\n    }\r\n    getScrollbarWidth() {\r\n        let outer = document.createElement('div');\r\n        outer.style.visibility = 'hidden';\r\n        outer.style.width = '100px';\r\n        document.body.appendChild(outer);\r\n        let widthNoScroll = outer.offsetWidth;\r\n        outer.style.overflow = 'scroll';\r\n        let inner = document.createElement('div');\r\n        inner.style.width = '100%';\r\n        outer.appendChild(inner);\r\n        let widthWithScroll = inner.offsetWidth;\r\n        outer.parentNode.removeChild(outer);\r\n        return widthNoScroll - widthWithScroll;\r\n    }\r\n    moveWidthFromMainToLeft(width) {\r\n        this.avgContentMainScroll_Width = this.avgContentMainScroll_Width - width;\r\n        this.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width - width;\r\n        this.avgContentLeft_Width = this.avgContentLeft_Width + width;\r\n        this.avgHeaderLeft_Width = this.avgHeaderLeft_Width + width;\r\n        this.avgContentMain_Left = this.avgContentMain_Left + width;\r\n        this.avgHeaderMain_Left = this.avgHeaderMain_Left + width;\r\n        this.avgContentHhandle_Left = this.avgContentHhandle_Left + width;\r\n    }\r\n    moveWidthFromLeftToMain(width) {\r\n        this.avgContentMainScroll_Width = this.avgContentMainScroll_Width + width;\r\n        this.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width + width;\r\n        this.avgContentLeft_Width = this.avgContentLeft_Width - width;\r\n        this.avgHeaderLeft_Width = this.avgHeaderLeft_Width - width;\r\n        this.avgContentMain_Left = this.avgContentMain_Left - width;\r\n        this.avgHeaderMain_Left = this.avgHeaderMain_Left - width;\r\n        this.avgContentHhandle_Left = this.avgContentHhandle_Left - width;\r\n    }\r\n    moveWidthFromMainToRight(width) {\r\n        this.avgContentMainScroll_Width = this.avgContentMainScroll_Width - width;\r\n        this.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width - width;\r\n        this.avgContentRight_Width = this.avgContentRight_Width + width;\r\n        this.avgHeaderRight_Width = this.avgHeaderRight_Width + width;\r\n        this.avgContentMain_Right = this.avgContentMain_Right + width;\r\n        this.avgHeaderMain_Right = this.avgHeaderMain_Right + width;\r\n        this.avgContentHhandle_Right = this.avgContentHhandle_Right + width;\r\n    }\r\n    moveWidthFromRightToMain(width) {\r\n        this.avgContentMainScroll_Width = this.avgContentMainScroll_Width + width;\r\n        this.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width + width;\r\n        this.avgContentRight_Width = this.avgContentRight_Width - width;\r\n        this.avgHeaderRight_Width = this.avgHeaderRight_Width - width;\r\n        this.avgContentMain_Right = this.avgContentMain_Right - width;\r\n        this.avgHeaderMain_Right = this.avgHeaderMain_Right - width;\r\n        this.avgContentHhandle_Right = this.avgContentHhandle_Right - width;\r\n    }\r\n    moveWidthFromLeftToRight(width) {\r\n        this.avgContentRight_Width = this.avgContentRight_Width - width;\r\n        this.avgHeaderRight_Width = this.avgHeaderRight_Width - width;\r\n        this.avgContentLeft_Width = this.avgContentLeft_Width + width;\r\n        this.avgHeaderLeft_Width = this.avgHeaderLeft_Width + width;\r\n        this.avgContentMain_Right = this.avgContentMain_Right - width;\r\n        this.avgHeaderMain_Right = this.avgHeaderMain_Right - width;\r\n        this.avgContentHhandle_Right = this.avgContentHhandle_Right - width;\r\n        this.avgContentMain_Left = this.avgContentMain_Left + width;\r\n        this.avgHeaderMain_Left = this.avgHeaderMain_Left + width;\r\n        this.avgContentHhandle_Left = this.avgContentHhandle_Left + width;\r\n    }\r\n    moveWidthFromRightToLeft(width) {\r\n        this.avgContentRight_Width = this.avgContentRight_Width + width;\r\n        this.avgHeaderRight_Width = this.avgHeaderRight_Width + width;\r\n        this.avgContentLeft_Width = this.avgContentLeft_Width - width;\r\n        this.avgHeaderLeft_Width = this.avgHeaderLeft_Width - width;\r\n        this.avgContentMain_Right = this.avgContentMain_Right + width;\r\n        this.avgHeaderMain_Right = this.avgHeaderMain_Right + width;\r\n        this.avgContentHhandle_Right = this.avgContentHhandle_Right + width;\r\n        this.avgContentMain_Left = this.avgContentMain_Left - width;\r\n        this.avgHeaderMain_Left = this.avgHeaderMain_Left - width;\r\n        this.avgContentHhandle_Left = this.avgContentHhandle_Left - width;\r\n    }\r\n    addWidthToLeft(width) {\r\n        this.avgContentLeft_Width = this.avgContentMainScroll_Width + width;\r\n        this.avgHeaderLeft_Width = this.avgContentHhandleScroll_Width + width;\r\n        this.avgContentMain_Left = this.avgContentMain_Left + width;\r\n        this.avgHeaderMain_Left = this.avgHeaderMain_Left + width;\r\n        this.avgContentHhandle_Left = this.avgContentHhandle_Left + width;\r\n    }\r\n    addWidthToMain(width) {\r\n        this.avgContentMainScroll_Width = this.avgContentMainScroll_Width + width;\r\n        this.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width + width;\r\n    }\r\n    addWidthToRight(width) {\r\n        this.avgContentRight_Width = this.avgContentMainScroll_Width + width;\r\n        this.avgHeaderRight_Width = this.avgContentHhandleScroll_Width + width;\r\n        this.avgContentMain_Right = this.avgContentMain_Right + width;\r\n        this.avgHeaderMain_Right = this.avgHeaderMain_Right + width;\r\n        this.avgContentHhandle_Right = this.avgContentHhandle_Right + width;\r\n    }\r\n    removeWidthFromLeft(width) {\r\n        this.avgContentLeft_Width = this.avgContentLeft_Width - width;\r\n        this.avgHeaderLeft_Width = this.avgHeaderLeft_Width - width;\r\n        this.avgContentMain_Left = this.avgContentMain_Left - width;\r\n        this.avgHeaderMain_Left = this.avgHeaderMain_Left - width;\r\n        this.avgContentHhandle_Left = this.avgContentHhandle_Left - width;\r\n    }\r\n    removeWidthFromMain(width) {\r\n        this.avgContentMainScroll_Width = this.avgContentMainScroll_Width - width;\r\n        this.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width - width;\r\n    }\r\n    removeWidthFromRight(width) {\r\n        this.avgContentRight_Width = this.avgContentRight_Width - width;\r\n        this.avgHeaderRight_Width = this.avgHeaderRight_Width - width;\r\n        this.avgContentMain_Right = this.avgContentMain_Right - width;\r\n        this.avgHeaderMain_Right = this.avgHeaderMain_Right - width;\r\n        this.avgContentHhandle_Right = this.avgContentHhandle_Right - width;\r\n    }\r\n}\r\nexports.HtmlHeightWidth = HtmlHeightWidth;\r\n//# sourceMappingURL=htmlHeightWidth.js.map",
dependencies: [],
sourceMap: {},
headerContent: undefined,
mtime: 1535657860155,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
