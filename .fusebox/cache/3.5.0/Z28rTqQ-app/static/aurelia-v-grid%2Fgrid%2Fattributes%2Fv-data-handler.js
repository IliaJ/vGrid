module.exports = { contents: "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _a, _b;\r\nconst aurelia_framework_1 = require(\"aurelia-framework\");\r\nconst v_grid_1 = require(\"../v-grid\");\r\nlet VGridAttributesDataHandler = class VGridAttributesDataHandler {\r\n    constructor(element, vGrid) {\r\n        this.isSet = false;\r\n        this.element = element;\r\n        this.vGrid = vGrid;\r\n    }\r\n    attached() {\r\n        this.element.onchange = this.onChanged.bind(this);\r\n        this.element.onfocus = this.onFocus.bind(this);\r\n        this.element.onblur = this.onBlur.bind(this);\r\n    }\r\n    valueChanged(newValue) {\r\n        if (this.isSet) {\r\n            let checkValue = this.editFormater.toView(newValue);\r\n            if (checkValue !== this.tempValue) {\r\n                this.element.value = this.displayFormater.toView(newValue);\r\n            }\r\n        }\r\n        else {\r\n            this.element.value = this.displayFormater.toView(newValue);\r\n        }\r\n    }\r\n    onFocus() {\r\n        this.isSet = true;\r\n        this.element.value = this.editFormater.toView(this.value);\r\n        this.tempValue = this.element.value;\r\n    }\r\n    onBlur() {\r\n        if (this.tempValue === this.element.value) {\r\n            this.onChanged();\r\n        }\r\n        this.isSet = false;\r\n    }\r\n    onChanged() {\r\n        this.value = this.editFormater.fromView(this.element.value);\r\n        this.bindingContext.rowRef[this.field] = this.value;\r\n        this.element.value = this.displayFormater.toView(this.value);\r\n        this.vGrid.controller.rowDataBinder.rebindRowNo(this.bindingContext.row);\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n        this.displayFormater = this.valueConverters(this.display);\r\n        this.editFormater = this.valueConverters(this.edit);\r\n        this.element.value = this.displayFormater.toView(this.value);\r\n    }\r\n    valueConverters(value) {\r\n        let valueConverter = this.vGrid.viewResources.getValueConverter.bind(this.vGrid.viewResources);\r\n        return valueConverter(value);\r\n    }\r\n};\r\n__decorate([\r\n    aurelia_framework_1.bindable,\r\n    __metadata(\"design:type\", String)\r\n], VGridAttributesDataHandler.prototype, \"field\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable,\r\n    __metadata(\"design:type\", String)\r\n], VGridAttributesDataHandler.prototype, \"value\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable,\r\n    __metadata(\"design:type\", String)\r\n], VGridAttributesDataHandler.prototype, \"display\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable,\r\n    __metadata(\"design:type\", String)\r\n], VGridAttributesDataHandler.prototype, \"edit\", void 0);\r\nVGridAttributesDataHandler = __decorate([\r\n    aurelia_framework_1.customAttribute('v-data-handler'),\r\n    aurelia_framework_1.inject(Element, v_grid_1.VGrid),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof HTMLElement !== \"undefined\" && HTMLElement) === \"function\" ? _a : Object, typeof (_b = typeof v_grid_1.VGrid !== \"undefined\" && v_grid_1.VGrid) === \"function\" ? _b : Object])\r\n], VGridAttributesDataHandler);\r\nexports.VGridAttributesDataHandler = VGridAttributesDataHandler;\r\n//# sourceMappingURL=v-data-handler.js.map",
dependencies: ["aurelia-framework","../v-grid"],
sourceMap: {},
headerContent: undefined,
mtime: 1535657860149,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
