module.exports = { contents: "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _a, _b, _c;\r\nconst aurelia_framework_1 = require(\"aurelia-framework\");\r\nconst v_grid_1 = require(\"./v-grid\");\r\nconst interfaces_1 = require(\"../interfaces\");\r\nlet VGridElementColConfig = class VGridElementColConfig {\r\n    constructor(element, vGrid, targetInstruction) {\r\n        this.vGrid = vGrid;\r\n        this.element = element;\r\n        this.colRowTemplate = targetInstruction.elementInstruction.colRowTemplate;\r\n        this.colHeaderTemplate = targetInstruction.elementInstruction.colHeaderTemplate;\r\n        this.colCss = targetInstruction.elementInstruction.colCss;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n        if (this.vGrid.newGrid) {\r\n            this.vGrid.colConfig.push({\r\n                colWidth: this.colWidth ? this.colWidth * 1 : 100,\r\n                colRowTemplate: this.colRowTemplate,\r\n                colHeaderTemplate: this.colHeaderTemplate,\r\n                colField: this.colField,\r\n                colPinLeft: this.checkBool(this.colPinLeft),\r\n                colPinRight: this.checkBool(this.colPinRight),\r\n                colHeaderName: this.colHeaderName,\r\n                colFilterMenu: this.colFilterMenu,\r\n                colLabelMenu: this.colLabelMenu,\r\n                colRowMenu: this.colRowMenu,\r\n                colHidden: this.checkBool(this.colHidden),\r\n                colDragDrop: this.colDragDrop,\r\n                colResizeable: this.colResizeable,\r\n                colAddLabelAttributes: this.colAddLabelAttributes,\r\n                colAddFilterAttributes: this.colAddFilterAttributes,\r\n                colAddRowAttributes: this.colAddRowAttributes,\r\n                colSort: this.colSort,\r\n                colDisplayEdit: this.colDisplayEdit,\r\n                colFilter: this.colFilter,\r\n                colFilterTop: this.checkBool(this.colFilterTop),\r\n                colCss: this.colCss,\r\n                colType: this.colType || 'text'\r\n            });\r\n        }\r\n    }\r\n    checkBool(value) {\r\n        if (typeof value === 'string') {\r\n            value = value.toLowerCase();\r\n        }\r\n        switch (true) {\r\n            case value === 'true':\r\n            case value === true:\r\n                value = true;\r\n                break;\r\n            case value === 'false':\r\n            case value === false:\r\n                value = false;\r\n                break;\r\n            default:\r\n                value = false;\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n};\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-width' }),\r\n    __metadata(\"design:type\", Number)\r\n], VGridElementColConfig.prototype, \"colWidth\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-field' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colField\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-header-name' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colHeaderName\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-sort' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colSort\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-pin-left' }),\r\n    __metadata(\"design:type\", Boolean)\r\n], VGridElementColConfig.prototype, \"colPinLeft\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-pin-right' }),\r\n    __metadata(\"design:type\", Boolean)\r\n], VGridElementColConfig.prototype, \"colPinRight\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-filter' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colFilter\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-filter-top' }),\r\n    __metadata(\"design:type\", Boolean)\r\n], VGridElementColConfig.prototype, \"colFilterTop\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-add-label-attributes' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colAddLabelAttributes\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-add-filter-attributes' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colAddFilterAttributes\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-add-row-attributes' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colAddRowAttributes\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-type' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colType\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-filter-menu' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colFilterMenu\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-label-menu' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colLabelMenu\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-row-menu' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colRowMenu\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-hidden' }),\r\n    __metadata(\"design:type\", Boolean)\r\n], VGridElementColConfig.prototype, \"colHidden\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-drag-drop' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colDragDrop\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-resizeable' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colResizeable\", void 0);\r\n__decorate([\r\n    aurelia_framework_1.bindable({ attribute: 'col-display-edit' }),\r\n    __metadata(\"design:type\", String)\r\n], VGridElementColConfig.prototype, \"colDisplayEdit\", void 0);\r\nVGridElementColConfig = __decorate([\r\n    aurelia_framework_1.noView(),\r\n    aurelia_framework_1.processContent((compiler, resources, element, instruction) => {\r\n        compiler = compiler;\r\n        resources = resources;\r\n        let headerTemplateElement = element.getElementsByTagName('V-HEADER-TEMPLATE')[0];\r\n        let headerTemplateHtml = headerTemplateElement ? headerTemplateElement.innerHTML : null;\r\n        if (headerTemplateHtml !== '') {\r\n            instruction.colHeaderTemplate = headerTemplateHtml;\r\n        }\r\n        let rowTemplateElement = element.getElementsByTagName('V-ROW-TEMPLATE')[0];\r\n        let rowTemplateHtml = rowTemplateElement ? rowTemplateElement.innerHTML : null;\r\n        if (rowTemplateHtml !== '') {\r\n            instruction.colRowTemplate = rowTemplateHtml;\r\n        }\r\n        element.innerHTML = '';\r\n        let css = element.getAttribute('col-css');\r\n        if (css) {\r\n            instruction.colCss = css;\r\n        }\r\n    }),\r\n    aurelia_framework_1.customElement('v-grid-col'),\r\n    aurelia_framework_1.inject(Element, v_grid_1.VGrid, aurelia_framework_1.TargetInstruction),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Element !== \"undefined\" && Element) === \"function\" ? _a : Object, typeof (_b = typeof v_grid_1.VGrid !== \"undefined\" && v_grid_1.VGrid) === \"function\" ? _b : Object, typeof (_c = typeof interfaces_1.CustomTargetInstruction !== \"undefined\" && interfaces_1.CustomTargetInstruction) === \"function\" ? _c : Object])\r\n], VGridElementColConfig);\r\nexports.VGridElementColConfig = VGridElementColConfig;\r\n//# sourceMappingURL=v-grid-col.js.map",
dependencies: ["aurelia-framework","./v-grid","../interfaces"],
sourceMap: {},
headerContent: undefined,
mtime: 1535657860162,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
